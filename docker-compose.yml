version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${HTTP_PORT:-8080}:8080"
      - "${GRPC_PORT:-3000}:3000"
      - "${METRICS_PORT:-9000}:9000"
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-pvz}
      - POSTGRES_SSLMODE=${POSTGRES_SSLMODE:-disable}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - pvz-network

  postgres:
    image: postgres:14-alpine
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-pvz}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - pvz-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  pvz-network:
    driver: bridge

volumes:
  postgres-data: